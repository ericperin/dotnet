version: "3.9"

services:
  api:
    image: eperin.example.api:0.0.1
    container_name: api
    profiles: ["app"]
    build:
      context: .
      dockerfile: src/Example.Api/Dockerfile
    ports:
      - "5000:80"
      - "5001:443"
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - ASPNETCORE_URLS=https://+:443;http://+:80
      - ASPNETCORE_Kestrel__Certificates__Default__Password=password
      - ASPNETCORE_Kestrel__Certificates__Default__Path=/https/aspnetapp.pfx
    volumes:
      - ~/.aspnet/https:/https:ro

  prometheus:
    image: prom/prometheus:v2.44.0
    container_name: prometheus
    extra_hosts: [ 'host.docker.internal:host-gateway' ]
    ports:
      - "9090:9090"
    volumes:
      - ./docker/prometheus/config.yml:/etc/prometheus/prometheus.yml

  grafana:
    image: grafana/grafana:9.5.3
    container_name: grafana
    extra_hosts: [ 'host.docker.internal:host-gateway' ]
    ports:
      - "3000:3000"
    environment:
      - GF_AUTH_ANONYMOUS_ENABLED=true
      - GF_AUTH_ANONYMOUS_ORG_ROLE=Admin
      - GF_AUTH_DISABLE_LOGIN_FORM=true
    volumes:
      - ./docker/grafana/data:/var/lib/grafana
      - ./docker/grafana/provisioning/datasources:/etc/grafana/provisioning/datasources:ro
      - ./docker/grafana/provisioning/dashboards:/etc/grafana/provisioning/dashboards:ro
    depends_on: 
      - prometheus